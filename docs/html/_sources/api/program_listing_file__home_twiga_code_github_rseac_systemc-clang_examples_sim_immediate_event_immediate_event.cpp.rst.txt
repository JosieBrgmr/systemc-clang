
.. _program_listing_file__home_twiga_code_github_rseac_systemc-clang_examples_sim_immediate_event_immediate_event.cpp:

Program Listing for File immediate_event.cpp
============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_twiga_code_github_rseac_systemc-clang_examples_sim_immediate_event_immediate_event.cpp>` (``/home/twiga/code/github/rseac/systemc-clang/examples/sim/immediate_event/immediate_event.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include "systemc.h"
   #include <iostream>
   using namespace std;
   
   sc_event pe, ce;
   
   SC_MODULE(producer) {
     sc_in_clk clk;
   SC_CTOR(producer) {
     SC_THREAD(prodEntry) {
       sensitive << clk.pos();
     }
   }
     void prodEntry() {
       while(true) {
         ce.notify();
         cout << sc_time_stamp() << ": producer\n";
         wait();
       }
     }
   };
   
   
   SC_MODULE(consumer) {
     sc_in_clk clk;
   SC_CTOR(consumer) {
     SC_THREAD(consumerEntry) {
       //sensitive << clk.pos();
     }
   }
     void consumerEntry() {
       while(true) {
         wait(ce);
         cout << sc_time_stamp() << ": consumer\n";
       }
     }
   };
   
   
   
   
   int sc_main(int argc, char *argv[]) {
     sc_clock clk;
     consumer c("consumer");
     producer p("producer");
   
     p.clk(clk);
     c.clk(clk);
   
     sc_start(10, SC_NS);
   
     return 0;
   
   };
