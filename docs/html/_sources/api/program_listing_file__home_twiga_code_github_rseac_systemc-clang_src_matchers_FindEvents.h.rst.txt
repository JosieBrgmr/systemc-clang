
.. _program_listing_file__home_twiga_code_github_rseac_systemc-clang_src_matchers_FindEvents.h:

Program Listing for File FindEvents.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_twiga_code_github_rseac_systemc-clang_src_matchers_FindEvents.h>` (``/home/twiga/code/github/rseac/systemc-clang/src/matchers/FindEvents.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef _FIND_EVENTS_H_
   #define _FIND_EVENTS_H_
   
   #include "clang/AST/DeclCXX.h"
   #include "clang/AST/RecursiveASTVisitor.h"
   #include "llvm/Support/raw_ostream.h"
   #include <map>
   #include <string>
   #include <vector>
   //#include "ReflectionContainerClass.h"
   
   namespace scpar {
   using namespace clang;
   using namespace std;
   
   class FindEvents : public RecursiveASTVisitor<FindEvents> {
   public:
     typedef map<string, FieldDecl *> classEventMapType;
     typedef pair<string, FieldDecl *> kvType;
   
     FindEvents(CXXRecordDecl *, llvm::raw_ostream &);
     FindEvents(const FindEvents &);
     virtual ~FindEvents();
     virtual bool VisitFieldDecl(FieldDecl *);
   
     classEventMapType getInClassEvents();
     vector<string> getEventNames();
   
     void dump();
   
   private:
     llvm::raw_ostream &os_;
     classEventMapType _inClassEvents;
     //    reflectionDataStructure * _reflectionMap;
   };
   
   } // namespace scpar
   #endif
