
.. _program_listing_file__home_twiga_code_github_rseac_systemc-clang_src_model_InterfaceDecl.cpp:

Program Listing for File InterfaceDecl.cpp
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_twiga_code_github_rseac_systemc-clang_src_model_InterfaceDecl.cpp>` (``/home/twiga/code/github/rseac/systemc-clang/src/model/InterfaceDecl.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include "InterfaceDecl.h"
   #include <string>
   #include "FindTemplateTypes.h"
   using namespace scpar;
   using namespace std;
   
   InterfaceDecl::~InterfaceDecl() {
     if (_templateType != nullptr) {
       delete _templateType;
     }
   }
   
   InterfaceDecl::InterfaceDecl() : _name{"NONE"}, _templateType{nullptr} {}
   
   InterfaceDecl::InterfaceDecl(const string &name, FindTemplateTypes *tt)
       : _name{name}, _templateType{tt} {}
   
   InterfaceDecl::InterfaceDecl(const InterfaceDecl &from) {
     _name = from._name;
     // This is necessary to allow FindInterfaces to go out of scope.
     _templateType = new FindTemplateTypes(*from._templateType);
   }
   
   void InterfaceDecl::setModuleName(const string &name) { _name = name; }
   
   string InterfaceDecl::getName() { return _name; }
   
   FindTemplateTypes *InterfaceDecl::getTemplateType() { return _templateType; }
   
   void InterfaceDecl::dump(raw_ostream &os, int tabn) {
     for (int i = 0; i < tabn; i++) {
       os << " ";
     }
     os << "InterfaceDecl " << this << " '" << _name << "' FindTemplateTypes "
        << _templateType;
     _templateType->printTemplateArguments(os);
   }
